<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.rtg.arm.atp</groupId>
    <artifactId>ProjectATP_GUI</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <jfx.version>19.0.2.1</jfx.version>
    </properties>

    <dependencies>
        <!-- WINDOWS -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${jfx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${jfx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${jfx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${jfx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${jfx.version}</version>
            <classifier>win</classifier>
        </dependency>

        <!-- LINUX -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${jfx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${jfx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${jfx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${jfx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${jfx.version}</version>
            <classifier>linux</classifier>
        </dependency>

        <!-- MAC -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${jfx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${jfx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${jfx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${jfx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${jfx.version}</version>
            <classifier>mac</classifier>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.6</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running -->
                        <!-- Usage: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>com.rtg.arm.atp/com.rtg.arm.atp.Launcher</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.rtg.arm.atp.Launcher</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>




    <profiles>
        <profile>
            <id>macOS</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <os_name>mac</os_name>
                <!-- should follow the pattern lib*library_name*.dylib-->
                <lib_name>libexample.dylib</lib_name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>0.9.28</version>
                        <extensions>true</extensions>
                        <configuration>
                            <javahOS>${os_name}</javahOS>
                            <sources>
                                <source>
                                    <!-- path to the C/C++ sources -->
                                    <directory>src/native/source</directory>
                                    <fileNames>
                                        <fileName>jni.c</fileName>
                                    </fileNames>
                                </source>
                                <!-- in this example - path to generated JNI header -->
                                <source>
                                    <directory>src/native/include</directory>
                                </source>
                            </sources>
                            <compilerProvider>generic-classic</compilerProvider>
                            <compilerExecutable>gcc</compilerExecutable>
                            <!-- compiler options -->
                            <compilerStartOptions>
                                <compilerStartOption>-m64</compilerStartOption>
                                <compilerStartOption>-Wall</compilerStartOption>
                                <compilerStartOption>-Wextra</compilerStartOption>
                                <compilerStartOption>-O3</compilerStartOption>
                                <compilerStartOption>-I</compilerStartOption>
                                <compilerStartOption>${env.JAVA_HOME}/include</compilerStartOption>
                                <compilerStartOption>-I</compilerStartOption>
                                <compilerStartOption>${env.JAVA_HOME}/include/darwin</compilerStartOption>
                            </compilerStartOptions>
                            <linkerOutputDirectory>target</linkerOutputDirectory>
                            <linkerExecutable>gcc</linkerExecutable>
                            <!-- linker options -->
                            <linkerStartOptions>
                                <linkerStartOption>-m64</linkerStartOption>
                                <linkerStartOption>-shared</linkerStartOption>
                            </linkerStartOptions>
                            <linkerEndOptions>
                                <linkerEndOption>-o ${project.build.directory}/${lib_name}</linkerEndOption>
                            </linkerEndOptions>
                        </configuration>
                        <executions>
                            <execution>
                                <id>javah</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>initialize</goal>
                                    <goal>compile</goal>
                                    <goal>link</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
